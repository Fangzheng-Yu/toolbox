{
    "task": "official_implementation_of_restormer"  //  root/task/images-models-options
    , "model": "progressive"                        // "plain" | "multiout" | "progressive"
    , "gpu_ids": [2, 5]
  
    , "scale": 1       // broadcast to "netG" if SISR
    , "n_channels": 3  // broadcast to "datasets", 1 for grayscale, 3 for color
  
    , "path": {
      "root": "results/deblurring"           // "denoising" | "superresolution" | "deblurring"
      , "pretrained_netG": null             // path of pretrained model
    }
  
    , "datasets": {
      "train": {
        "name": "train_dataset"             // just name
        , "dataset_type": "plain"           // "plain" 
        , "dataroot_H": "/data1/Motion_Deblurring/GoPro/train/target_crops" // path of High-quality training dataset (prefered full path)
        , "dataroot_L": "/data1/Motion_Deblurring/GoPro/train/input_crops" // path of Low-quality training dataset (prefered full path)
        , "H_size": 384                     // patch size 40 | 64 | 96 | 128 | 192 | 224 | 256 | 384
  
        , "dataloader_shuffle": true
        , "dataloader_num_workers": 8
        , "dataloader_batch_size": 64       // batch size 1 | 16 | 32 | 48 | 64 | 128

        , "mini_batch_sizes": [8, 5, 4, 2, 1, 1] // mini batch size for progressive training
        , "iters_milestones": [92000, 64000, 48000, 36000, 36000, 24000] // milestone of iteration for progressive training
        , "mini_H_sizes" : [128, 160, 192, 256, 320, 384] // varing H_size for progressive training
      }
      , "valid": {
        "name": "valid_dataset"           // just name
        , "dataset_type": "plain"         // "dncnn" | "dnpatch" for dncnn,  | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch"
        , "dataroot_H": "/data1/Motion_Deblurring/GoPro/val/target_crops" // path of High-quality testing dataset (prefered full path)
        , "dataroot_L": "/data1/Motion_Deblurring/GoPro/val/input_crops" // path of Low-quality testing dataset (prefered full path)
  
        , "sigma": 25                     // unused
        , "sigma_valid": 25               // unused

        , "dataloader_num_workers": 8
        , "dataloader_batch_size": 16     // batch size 1 | 16 | 32 | 48 | 64 | 128
      }
      , "test": {
        "name": "test_dataset"            // unused
        , "dataset_type": "plain"         // dataset type
        , "dataroot_H": "/data1/Motion_Deblurring/GoPro/test/target" // path of High-quality testing dataset
        , "dataroot_L": "/data1/Motion_Deblurring/GoPro/test/input" // path of Low-quality testing dataset

        , "sigma": 25                     // unused
        , "sigma_valid": 25               // unused

        , "dataloader_num_workers": 0
        , "dataloader_batch_size": 1     // batch size 1
      }
    }
  
    , "netG": {
      "net_type": "restormer"        // "mimounet" | "mimounetplus" | "restormer" 
      , "in_nc": 3                   // input channel number
      , "out_nc": 3                  // ouput channel number
      , "nc": 48                     // basic hidden dim or base channel
      , "nb": [4, 6, 6, 8]           // number of blocks (list if different scales)
      , "n_refine_b": 4              // number of refinement blocks
      , "heads": [1, 2, 4, 8]        // heads of multi-head attention
      , "ffn_expansion_factor": 2.66 // hidden dim expanded in Gated-Dconv Network
      , "bias": false                // bias in qkv generation
      , "LayerNorm_type": "WithBias" // Other option 'BiasFree'
      , "dual_pixel_task": false     // ## True for dual-pixel defocus deblurring only. Also set inp_channels=6
  
      , "init_type": "orthogonal"         // unused "orthogonal" | "normal" | "uniform" | "xavier_normal" | "xavier_uniform" | "kaiming_normal" | "kaiming_uniform"
      , "init_bn_type": "uniform"         // unused "uniform" | "constant"
      , "init_gain": 0.2
    }
  
    , "train": {
      "total_epoch": 300000
      ,"G_lossfn_type": "l1"                     // "l1" | "l2sum" | "l2" | "ssim" | "charbonnier" | 'l1+ssim' | 'l1+fft'
      , "G_lossfn_weight": [1.0]                 // default
  
      , "G_optimizer_type": "adamw"        // fixed, adam is enough
      , "G_optimizer_lr": 3e-4             // learning rate
      , "G_optimizer_betas": [0.9, 0.999]  // beta 
      , "G_optimizer_wd": 1e-4             // weight decay
      , "G_optimizer_clipgrad": 0.01       // the max norm of grad for clipping (negative for unclipping)
  
      , "G_scheduler_type": "CosineAnnealingRestartCyclicLR"              // "MultiStepLR" | "CosineAnnealingWarmRestarts" | "CosineAnnealingRestartCyclicLR"
      , "G_scheduler_milestones": [50000, 100000, 200000, 250000, 300000] // for "MultiStepLR"
      , "G_scheduler_gamma": 0.5                                          // for "MultiStepLR"
      , "G_scheduler_period": 50000                                       // for "CosineAnnealingWarmRestarts"
      , "G_scheduler_eta_min": 0.000001                                   // for "CosineAnnealingWarmRestarts"
      , "G_scheduler_periods": [92000, 208000]                            // for "CosineAnnealingRestartCyclicLR"
      , "G_scheduler_restart_weights": [1, 1]                             // for "CosineAnnealingRestartCyclicLR"
      , "G_scheduler_eta_mins": [0.0003,0.000001]                         // for "CosineAnnealingRestartCyclicLR"
  
      , "G_regularizer_orthstep": null    // unused
      , "G_regularizer_clipstep": null    // unused
  
      , "checkpoint_valid": 5000          // for validating
      , "checkpoint_save": 5000           // for saving model
      , "checkpoint_print": 200           // for print
    }
  }
  